(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{125:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return o})),n.d(a,"metadata",(function(){return c})),n.d(a,"rightToc",(function(){return l})),n.d(a,"default",(function(){return p}));var t=n(1),r=n(6),i=(n(0),n(140)),o={id:"quick-guide-lerna",title:"Gu\xeda para Lerna",sidebar_label:"Lerna \u2013 Gu\xeda r\xe1pida"},c={id:"quick-guides/quick-guide-lerna",title:"Gu\xeda para Lerna",description:"## Lerna\r",source:"@site/docs\\quick-guides\\quick-guide-lerna.md",permalink:"/personal-docusaurus/docs/quick-guides/quick-guide-lerna",editUrl:"https://github.com/vgrados2/personal-docusaurus/edit/master/docs/quick-guides/quick-guide-lerna.md",sidebar_label:"Lerna \u2013 Gu\xeda r\xe1pida",sidebar:"someSidebar",previous:{title:"Gu\xeda para Angular",permalink:"/personal-docusaurus/docs/quick-guides/quick-guide-angular"},next:{title:"Semantic Versioning",permalink:"/personal-docusaurus/docs/quick-guides/quick-guide-semver"}},l=[{value:"Lerna",id:"lerna",children:[{value:"Configurar Lerna",id:"configurar-lerna",children:[]}]},{value:"Comandos",id:"comandos",children:[{value:"lerna version",id:"lerna-version",children:[]},{value:"lerna publish",id:"lerna-publish",children:[]},{value:"Scripts de ciclo de vida lerna",id:"scripts-de-ciclo-de-vida-lerna",children:[]}]}],s={rightToc:l};function p(e){var a=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},s,n,{components:a,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"lerna"},"Lerna"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Lerna es una herramienta que optimiza el flujo de trabajo en torno a la gesti\xf3n de repositorios de paquetes m\xfaltiples con git y npm.")),Object(i.b)("p",null,"Esta herramienta realmente ayuda cuando se trata con versiones sem\xe1nticas, configurando el flujo de trabajo de construcci\xf3n, empujando sus paquetes, etc. La idea principal detr\xe1s de Lerna es que su proyecto tiene una carpeta de paquetes, que contiene todas sus partes de c\xf3digo aisladas. Y adem\xe1s de los paquetes, tiene una aplicaci\xf3n principal, que por ejemplo puede vivir en la carpeta src. Casi todas las operaciones en Lerna funcionan a trav\xe9s de una regla simple: itera a trav\xe9s de todos sus paquetes y realiza algunas acciones sobre ellos, por ejemplo, aumentar la versi\xf3n del paquete, actualizar la dependencia de todos los paquetes, construir todos los paquetes, etc."),Object(i.b)("h3",{id:"configurar-lerna"},"Configurar Lerna"),Object(i.b)("p",null,"Lerna es una herramienta CLI (interfaz de l\xednea de comandos), por lo que la instalo globalmente."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"npm i lerna -g\nnpm lerna --help  #Para visualizar los comandos\n")),Object(i.b)("h4",{id:"opciones"},"Opciones"),Object(i.b)("p",null,"por defecto se encuentra configurado con ",Object(i.b)("inlineCode",{parentName:"p"},"Fixed/Locked")," este mantendra la misma version en todos los modulos"),Object(i.b)("p",null,"si quiere que cada uno de estos modulos mantenga una version independiente debera configurarlo de esta forma."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"--independent"),"/ ",Object(i.b)("inlineCode",{parentName:"p"},"-i"),"- Utiliza el modo de control de versiones independiente."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n  "npmClient": "npm",\n  "command": {\n    "publish": {\n      "ignoreChanges": ["ignored-file", "*.md"],\n      "message": "chore(release): publish",\n      "registry": "https://npm.pkg.github.com"\n    },\n    "version": {\n        "push": false\n    }\n  },\n  "packages": ["packages/*"]\n}\n')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"packages"),": Matriz de globos para usar como ubicaciones de paquetes."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"command.publish.message"),": un mensaje de confirmaci\xf3n personalizado al realizar actualizaciones de versi\xf3n para publicaci\xf3n."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"command.publish.registry"),": util\xedcelo para establecer una URL de registro personalizada para publicar en lugar de npmjs.org, ya debe estar autenticado si es necesario."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"command.publish.ignoreChanges"),": una variedad de globos que no se incluir\xe1n en ",Object(i.b)("inlineCode",{parentName:"p"},"lerna changed/publish"),". Use esto para evitar publicar una nueva versi\xf3n innecesariamente para cambios, como arreglar un ",Object(i.b)("inlineCode",{parentName:"p"},"README.md")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"command.version.push"),": evita que se ejecute el push del version automaticamente."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"npmClient"),": una opci\xf3n para especificar un cliente espec\xedfico para ejecutar comandos (esto tambi\xe9n se puede especificar por comando). Cambie a ",Object(i.b)("inlineCode",{parentName:"p"},'"yarn"'),'para ejecutar todos los comandos con hilo. El valor predeterminado es "npm".'),Object(i.b)("h2",{id:"comandos"},"Comandos"),Object(i.b)("p",null,"Cree un nuevo repositorio de lerna o actualice un repositorio existente a la versi\xf3n actual de Lerna."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"lerna init\nlerna ls     #Para ver los modulos afectados\nlerna run    #Para ejecutar un script de cada paquete (npm run start)\n")),Object(i.b)("p",null,"tener en cuenta que lerna no tomara los modulos que esten marcados como ",Object(i.b)("inlineCode",{parentName:"p"},"private: true")," en el package.son"),Object(i.b)("h3",{id:"lerna-version"},"lerna version"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"lerna version 1.0.1 # explicit\nlerna version patch # semver keyword\nlerna version       # select from prompt(s)\n")),Object(i.b)("p",null,"Cuando se ejecuta, este comando hace lo siguiente:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Identifica los paquetes que se han actualizado desde la versi\xf3n etiquetada anterior."),Object(i.b)("li",{parentName:"ol"},"Solicita una nueva versi\xf3n."),Object(i.b)("li",{parentName:"ol"},"Modifica los metadatos del paquete para reflejar la nueva versi\xf3n, ejecutando los ",Object(i.b)("a",Object(t.a)({parentName:"li"},{href:"https://github.com/lerna/lerna/tree/master/commands/version#lifecycle-scripts"}),"scripts de ciclo de vida")," apropiados en la ra\xedz y por paquete."),Object(i.b)("li",{parentName:"ol"},"Confirma esos cambios y etiqueta genera la etiqueta (tag)."),Object(i.b)("li",{parentName:"ol"},"Ejecuta el push.")),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"lerna version [major | minor | patch | premajor | preminor | prepatch | prerelease]\n#Cuando le pasamos uno de los parametros podemos usar --yes para evitar la confirmacion.\n")),Object(i.b)("p",null,"Para utilizar ",Object(i.b)("inlineCode",{parentName:"p"},"lerna version")," tenemos 2 opciones "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"from-git"),":  Este comando identifica los tags que se encuentran en git publicados por ",Object(i.b)("inlineCode",{parentName:"p"},"lerna version")," y incrementa la version en base a este.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"from-package"),": Este comando inspecciona cada uno de los ",Object(i.b)("inlineCode",{parentName:"p"},"package.json"),"  y verifica si una de las versiones no esta presente en el registry. Cualquier versi\xf3n que no est\xe9 presente en el registro ser\xe1 publicada. Esto es \xfatil cuando un anterior ",Object(i.b)("inlineCode",{parentName:"p"},"lerna publish"),"no pudo publicar todos los paquetes en el registro."))),Object(i.b)("h4",{id:"opciones-1"},"Opciones"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--allow-branch"}),"--allow-branch"))),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n  "command": {\n    "version": {\n      "allowBranch": "master"\n    }\n  }\n}\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--amend"}),"--amend"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"lerna version --amend\n# commit message es retennido y agrega los cambios al commit actual, `git push` es omitido.\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--ignore-scripts"}),"--ignore-scripts"),Object(i.b)("p",{parentName:"li"},"Cuando se pasa, este indicador deshabilitar\xe1 la ejecuci\xf3n de ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/lerna/lerna/tree/master/commands/version#lifecycle-scripts"}),"scripts de ciclo de vida")," durante ",Object(i.b)("inlineCode",{parentName:"p"},"lerna version"),".")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--no-git-tag-version"}),"--no-git-tag-version"),Object(i.b)("p",{parentName:"li"},"De manera predeterminada, ",Object(i.b)("inlineCode",{parentName:"p"},"lerna version"),"confirmar\xe1 los cambios en los archivos package.json y etiquetar\xe1 la versi\xf3n. Pase ",Object(i.b)("inlineCode",{parentName:"p"},"--no-git-tag-version"),"para deshabilitar el comportamiento.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--no-push"}),"--no-push"),Object(i.b)("p",{parentName:"li"},"Por defecto, ",Object(i.b)("inlineCode",{parentName:"p"},"lerna version"),"enviar\xe1 los cambios confirmados y etiquetados al ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/lerna/lerna/tree/master/commands/version#--git-remote-name"}),"control remoto git")," configurado . Pase ",Object(i.b)("inlineCode",{parentName:"p"},"--no-push"),"para deshabilitar este comportamiento.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--sign-git-commit"}),"--sign-git-commit"),Object(i.b)("p",{parentName:"li"},"Esta opci\xf3n es an\xe1loga a la ",Object(i.b)("inlineCode",{parentName:"p"},"npm version")," ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://docs.npmjs.com/misc/config#sign-git-commit"}),"opci\xf3n")," del mismo nombre.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--sign-git-tag"}),"--sign-git-tag"),Object(i.b)("p",{parentName:"li"},"Esta opci\xf3n es an\xe1loga a la ",Object(i.b)("inlineCode",{parentName:"p"},"npm version")," ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://docs.npmjs.com/misc/config#sign-git-tag"}),"opci\xf3n")," del mismo nombre.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--yes"}),"--yes"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"lerna version --yes\n# omite la confirmacion\n")))),Object(i.b)("h3",{id:"lerna-publish"},"lerna publish"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{}),"lerna publish               # publique paquetes que han cambiado desde la \xfaltima versi\xf3n \nlerna publish fron-git      # expl\xedcitamente publique paquetes etiquetados en el compromiso actual \nlerna publish fron-package # Publique expl\xedcitamente paquetes donde la \xfaltima versi\xf3n no est\xe1 presente en el registro\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("inlineCode",{parentName:"p"},"lerna publish"),"admite todas las opciones proporcionadas ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/lerna/lerna/tree/master/commands/version#options"}),Object(i.b)("inlineCode",{parentName:"a"},"lerna version")),"adem\xe1s de lo siguiente:")),Object(i.b)("h4",{id:"opciones-2"},"Opciones"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--contents-dir"}),"--contents dir"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),'lerna publish --contents dist\n#publica la subcarpeta "dist" de cada paquete hoja administrado por Lerna (debe ser configurado en cada paquete)\n'))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--legacy-auth"}),"--legacy-auth"),Object(i.b)("p",{parentName:"li"},"Al publicar paquetes que requieren autenticaci\xf3n pero est\xe1 trabajando con un registro NPM alojado internamente que solo utiliza la versi\xf3n heredada de Base64 del nombre de usuario: contrase\xf1a. Esto es lo mismo que el ",Object(i.b)("inlineCode",{parentName:"p"},"_auth"),"indicador de publicaci\xf3n de NPM ."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"publicar lerna --legacy-auth aGk6bW9t\n")),Object(i.b)("p",{parentName:"li"},"para generar este codigo en base 64 puede hacerlo de la siguiente manera"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"echo -n 'username:password' | openssl base64\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--no-verify-access"}),"--no-verify-access"),Object(i.b)("p",{parentName:"li"},"De forma predeterminada, ",Object(i.b)("inlineCode",{parentName:"p"},"lerna"),"verificar\xe1 el acceso del usuario npm conectado a los paquetes que est\xe1n por publicarse. Pasar esta bandera deshabilitar\xe1 esa verificaci\xf3n."),Object(i.b)("p",{parentName:"li"},"Si est\xe1 utilizando un registro de terceros que no es compatible ",Object(i.b)("inlineCode",{parentName:"p"},"npm access ls-packages"),", tendr\xe1 que pasar esta bandera (o conjunto ",Object(i.b)("inlineCode",{parentName:"p"},"command.publish.verifyAccess"),"de ",Object(i.b)("inlineCode",{parentName:"p"},"false"),"en lerna.json)."),Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},"Por favor, use con precauci\xf3n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--registry-url"}),"--registry url"))),Object(i.b)("p",null,"Cuando se ejecuta con este indicador, los comandos npm reenviados utilizar\xe1n el registro especificado para su (s) paquete (s)."),Object(i.b)("p",null,"Esto es \xfatil si no desea configurar expl\xedcitamente la configuraci\xf3n de su registro en todos sus archivos package.json individualmente, por ejemplo, cuando usa registros privados."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n  "publishConfig": {\n    "registry": "http://my-awesome-registry.com/"\n  }\n}\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("h6",Object(t.a)({parentName:"li"},{id:"--tag-version-prefix"}),"--tag-version-prefix"))),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n  "tagVersionPrefix": "",\n  "packages": ["packages/*"],\n  "version": "independent"\n}\n')),Object(i.b)("h3",{id:"scripts-de-ciclo-de-vida-lerna"},"Scripts de ciclo de vida lerna"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"#preversion: Ejecutar ANTES de encontrar la versi\xf3n del paquete. \n#version: Ejecutar DESPU\xc9S de encontrar la versi\xf3n del paquete, pero ANTES de confirmar. \n#postversion: Ejecutar DESPU\xc9S de encontrar la versi\xf3n del paquete, y DESPU\xc9S de confirmar.\n")),Object(i.b)("p",null,"Lerna ejecutar\xe1 ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://docs.npmjs.com/misc/scripts#description"}),"scripts de ciclo de vida npm")," durante ",Object(i.b)("inlineCode",{parentName:"p"},"lerna version"),"el siguiente orden:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Detectar paquetes modificados, elegir versi\xf3n (s)")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Ejecute el ",Object(i.b)("inlineCode",{parentName:"p"},"preversion"),"ciclo de vida en la ra\xedz")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Para cada paquete modificado, en orden topol\xf3gico (todas las dependencias antes que las dependientes):"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"Ejecutar ",Object(i.b)("inlineCode",{parentName:"li"},"preversion"),"ciclo de vida"),Object(i.b)("li",{parentName:"ol"},"Actualizar versi\xf3n en package.json"),Object(i.b)("li",{parentName:"ol"},"Ejecutar ",Object(i.b)("inlineCode",{parentName:"li"},"version"),"ciclo de vida"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Ejecute el ",Object(i.b)("inlineCode",{parentName:"p"},"version"),"ciclo de vida en la ra\xedz")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Agregar archivos modificados al \xedndice, si est\xe1 ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/lerna/lerna/tree/master/commands/version#--no-git-tag-version"}),"habilitado"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Crear confirmaci\xf3n y etiqueta (s), si est\xe1 ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/lerna/lerna/tree/master/commands/version#--no-git-tag-version"}),"habilitado"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Para cada paquete modificado, en orden "),Object(i.b)("p",{parentName:"li"},"l\xe9xico"),Object(i.b)("p",{parentName:"li"}," (alfab\xe9tico seg\xfan la estructura del directorio):"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"Ejecutar ",Object(i.b)("inlineCode",{parentName:"li"},"postversion"),"ciclo de vida"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Ejecute el ",Object(i.b)("inlineCode",{parentName:"p"},"postversion"),"ciclo de vida en la ra\xedz")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Empuje commit y tag (s) a control remoto, si est\xe1 ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/lerna/lerna/tree/master/commands/version#--no-push"}),"habilitado"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Crear versi\xf3n, si est\xe1 ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/lerna/lerna/tree/master/commands/version#--create-release-type"}),"habilitada")))))}p.isMDXComponent=!0},140:function(e,a,n){"use strict";n.d(a,"a",(function(){return b})),n.d(a,"b",(function(){return m}));var t=n(0),r=n.n(t);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var a=r.a.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):c({},a,{},e)),n},b=function(e){var a=p(e.components);return r.a.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},d=Object(t.forwardRef)((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(n),d=t,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return n?r.a.createElement(m,c({ref:a},s,{components:n})):r.a.createElement(m,c({ref:a},s))}));function m(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var l in a)hasOwnProperty.call(a,l)&&(c[l]=a[l]);c.originalType=e,c.mdxType="string"==typeof e?e:t,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);