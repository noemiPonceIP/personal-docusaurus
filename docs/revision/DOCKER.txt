CONFIGURAR IP CENTOS 7 
http://ask.xmodulo.com/configure-static-ip-address-centos7.html
 cd /etc/sysconfig/network-scripts/
vi 
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=static
IPADDR=192.168.0.155
NETMASK=255.255.255.0
GATEWAY=192.168.0.1
NM_CONTROLLED=yes
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=enp0s3
UUID=ac423e3f-fef3-4999-af26-9a81994d55c7

////////////////////////////////////////////
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=static
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=enp0s3
#UUID=e404b771-adf7-4493-84c7-21b6ce47ba2e
DEVICE=enp0s3
ONBOOT=yes
IPADDR=172.16.11.99
NETMASK=255.255.254.0
GATEWAY=172.16.10.235
DNS1=172.16.10.235
ZONE=public
/////////////////////////////////////////////

DEVICE=enp0s3
ONBOOT=yes
--------------
ONBOOT=no
dhclient
systemctl restart network.service

# ip add

KITEMATIC WINDOWS
-instala virtual box y sobre eso monda docker (GRAFICO);
LINUX
ACTUALIZAR MI SISTEMA OPERATIVO
sudo yum update -y
INSTALAR DOKER DESDE PAQUETE MANAGER DE YUM
sudo yum install -y docker
INICIALIZAR DOCKER START 
- manualmente: sudo service docker start
- automaticamente: sudo chkconfig docker on
AÑADIR EL USUARIO A GRUPO COKER 
sudo usermod -a -G docker ec2-user
EJECUTAR HELLO WORLD
docker run hello-world



LISTAR CONTENEDORES (solo los q se ejecutan) 
docker ps   
LISTAR TODOS 
docker ps -a
BORRAR 
docker rm IDCONTENEDOR

IMAGENES EN DOCKER LISTAR
docker images

BORRAR IMAGEN
docker rmi IDIMAGEN:TAG

BORRAR IMAGEN QUE ESTE SIENDO USADA POR UN CONTENEDOR

docker rmi -f IDIMAGEN:TAG

CREAR UNA IMAGEN PROPIA 

docker commit nginx-compartido suso/mi-nginx

EJECUTARLA 
docker run --name test-nginx -d suso/mi-nginx

RENAME IMAGEN 
docker tag suso/mi-nginx suso/nginx-subido


DOCKER EN LA NUBE 
docker login  -> docker push


REDES EN DOCKER 
--------------

REDES ACTIVAS (BRIDGE)

docker network ls
docker network inspect bridge  
docker network inspect NOMBRERED
NUEVA RED
docker network create mi-red

ELIMINAR UNA RED

docker network disconnect bridge NAMERED



CONECTAR UNA RED A UN CONTENEDOR

docker network connect mi-red nginx-compartido

CONECTAR EL CONENETOR A LA RED BRIDGE

docker network connect bridge nginx-compartido


INSTALANDO IMAGEN DE APACHE CON DOCKER 
docker run --name mi-apache -p 8080:80 -v /opt/MYAPACHE/:/usr/local/apache2/htdocs/ -d httpd:2.4-alpine

docker run -dit --name my-apache-app -p 8080:80 -v /opt/MYAPACHE/:/usr/local/apache2/htdocs/ httpd:2.4-alpine

DOCKER SWARM
KUBERNETES


MYSQL 8
IMAGEN
docker pull mysql/mysql-server
CREAR CONTENEDOR 
docker run --name=mysql1 -d mysql/mysql-server

PASS
docker logs mysql1 2>&1 | grep GENERATED
PUJAxvar$ez70N4LliPAqumkIm4

EJECUTAR MYSQL 
docker exec -it mysql1 mysql -uroot -p  paswword

CHANGE PASSWORD 
ALTER USER 'root'@'localhost' IDENTIFIED BY 'newpassword';









