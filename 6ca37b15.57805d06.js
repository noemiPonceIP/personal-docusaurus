(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{116:function(e,a,r){"use strict";r.r(a),r.d(a,"frontMatter",(function(){return o})),r.d(a,"metadata",(function(){return c})),r.d(a,"rightToc",(function(){return s})),r.d(a,"default",(function(){return l}));var t=r(1),n=r(6),i=(r(0),r(135)),o={id:"quick-guide-git",title:"GIT \u2013 Gu\xeda r\xe1pida",sidebar_label:"GIT \u2013 Gu\xeda r\xe1pida"},c={id:"quick-guides/quick-guide-git",title:"GIT \u2013 Gu\xeda r\xe1pida",description:"Las zonas de Git\r",source:"@site/docs\\quick-guides\\quick-guide-git.md",permalink:"/personal-docusaurus/docs/quick-guides/quick-guide-git",editUrl:"https://github.com/vgrados2/personal-docusaurus/edit/master/docs/quick-guides/quick-guide-git.md",sidebar_label:"GIT \u2013 Gu\xeda r\xe1pida",sidebar:"someSidebar",next:{title:"NPM \u2013 Gu\xeda r\xe1pida",permalink:"/personal-docusaurus/docs/quick-guides/quick-guide-npm"}},s=[{value:"Las zonas de Git",id:"las-zonas-de-git",children:[]},{value:"Inicializar repositorio",id:"inicializar-repositorio",children:[]},{value:"Manejo de Ramas en Git",id:"manejo-de-ramas-en-git",children:[]},{value:"Manejo de Commits",id:"manejo-de-commits",children:[]},{value:"Manejo de Tags de git",id:"manejo-de-tags-de-git",children:[]},{value:"Guardar cambios actuales para recuperarlos despu\xe9s",id:"guardar-cambios-actuales-para-recuperarlos-despu\xe9s",children:[]},{value:"Configuraciones",id:"configuraciones",children:[]}],u={rightToc:s};function l(e){var a=e.components,r=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},u,r,{components:a,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"las-zonas-de-git"},"Las zonas de Git"),Object(i.b)("p",null,Object(i.b)("img",Object(t.a)({parentName:"p"},{src:"https://www.kindpng.com/picc/m/368-3680560_git-push-pull-commit-hd-png-download.png",alt:"alt zonas de git"}))),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"WORKING DIRECTORY:")," Es el directorio de trabajo , lo q aun no se ha subido")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"STAGING AREA:")," Es donde se agregan temporalmente archivos persistentes.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"REPOSITORY (localrepo):")," Cuando ya se realiza un commit los archivos pasan del staging a repository"))),Object(i.b)("h2",{id:"inicializar-repositorio"},"Inicializar repositorio"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),'$ git init\n$ git add .                           # Marca todos los ficheros para el pr\xf3ximo commit.\n$ git add index.html                  # Marcar un fichero en especifico\n$ git commit -am "Mensaje"            # add y commit\n$ git status                          # Estaod actual del repositorio\n$ git commit -m "Commit inicial"      # Crea un nuevo commit con los ficheros marcados.\n')),Object(i.b)("h2",{id:"manejo-de-ramas-en-git"},"Manejo de Ramas en Git"),Object(i.b)("h4",{id:"creaci\xf3n-de-ramas"},"Creaci\xf3n de ramas"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"$ git branch <nombre>                 # Crear la rama en el punto actual. Es necesario hacer checkout a la misma.\n$ git checkout -b <nombre>            # Crear rama en el punto actual y hacerle checkout.\n")),Object(i.b)("h4",{id:"actualizaci\xf3n-de-ramas"},"Actualizaci\xf3n de ramas"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"$ git branch -m <actual> <nuevo>      # Renombrar la rama\n$ git branch -d <nombre>              # Borrar la rama\n")),Object(i.b)("h4",{id:"listar-ramas"},"Listar ramas"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"$ git branch                          # Listar todas las ramas\n$ git branch -v                       # Mostrar \xfaltimo commit en cada rama y su situaci\xf3n respecto a su rama remota (si hay)\n$ git branch --merged                 # Mostrar ramas que se han fusionado con la actual, y por tanto pueden borrarse\n$ git branch --no-merged              # Mostrar ramas con trabajos sin funsionar. Intentar borrarlas dar\xe1 un error.\n")),Object(i.b)("h4",{id:"moverse-a-una-rama-o-a-un-commit-espec\xedfico"},"Moverse a una rama o a un commit espec\xedfico"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"$ git checkout <COMMIT>            # No toca los cambios locales\n$ git checkout -f <COMMIT>         # Sobreescribe los cambios locales\n")),Object(i.b)("h4",{id:"fusionar-ramas-merge"},"Fusionar ramas (merge)"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"$ git merge <nombre>               # Fusiona la rama indicada en la rama actual\n")),Object(i.b)("h2",{id:"manejo-de-commits"},"Manejo de Commits"),Object(i.b)("h4",{id:"deshacer-cambios"},"Deshacer cambios"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"$ git revert <COMMIT>              # Deshacer de forma segura los cambios introducidos por un commit cualquiera\n$ git reset --hard                 # Deshace los cambios locales\n$ git reset --hard HEAD~1          # Elimina el \xfaltimo commit\n")),Object(i.b)("h4",{id:"editar-ultimo-commit-aun-no-pushed"},"Editar ultimo commit (aun no pushed)"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"# Realizar el add previamente\n$ git commit --amend          # cuando ya metiste el comentario pero no has hecho aun push, puedes editarlo\n")),Object(i.b)("h2",{id:"manejo-de-tags-de-git"},"Manejo de Tags de git"),Object(i.b)("h4",{id:"tags"},"tags"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"$ git tag                              # Mostrar lista de tags\n$ git tag -n                           # Mostrar lista y descripci\xf3n\n$ git tag -d <nombre>                  # Eliminar Tag\n$ git tag -a <nombre>                  # Crear Tag no firmado\n$ git push --tags                      # Subir Tags al repositorio remoto\n$ git push origin :refs/tags/<nombre>  # Eliminar Tag remoto borrado localmente\n")),Object(i.b)("h2",{id:"guardar-cambios-actuales-para-recuperarlos-despu\xe9s"},"Guardar cambios actuales para recuperarlos despu\xe9s"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"$ git stash                    # Guarda cambios hechos desde el ultimo commit\n$ git stash pop                # Recupera los cambios guardados\n$ git stash list               # Lista los estados guardados\n$ git stash apply              # Aplica cambios guardados sin borrarlos de la lista\n")),Object(i.b)("h2",{id:"configuraciones"},"Configuraciones"),Object(i.b)("h4",{id:"configurar-el-usuario-y-direcci\xf3n-de-correo-en-git-global"},"Configurar el usuario y direcci\xf3n de correo en git global"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),'git config --global user.name "username"\ngit config --global user.email "name@domain.com"\ngit config --global color.diff true\n')),Object(i.b)("h4",{id:"configurar-el-usuario-y-direcci\xf3n-de-correo-para-un-repo"},"Configurar el usuario y direcci\xf3n de correo para un repo"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),'git config user.name "username"\ngit config user.email "name@domain.com"\n')),Object(i.b)("h4",{id:"configurar-repositorios-remotos"},"Configurar repositorios remotos"),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"git remote -v #ver ramas remotas\ngit remote set-url origin https://github.com/USERNAME/REPOSITORY.git #Cambiar url remota\ngit remote add origin https://github.com/user/repo.git    #Setear una nueva url remota\ngit remote rm $name #Eliminar url remota\n")))}l.isMDXComponent=!0},135:function(e,a,r){"use strict";r.d(a,"a",(function(){return m})),r.d(a,"b",(function(){return p}));var t=r(0),n=r.n(t);function i(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){i(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=n.a.createContext({}),l=function(e){var a=n.a.useContext(u),r=a;return e&&(r="function"==typeof e?e(a):c({},a,{},e)),r},m=function(e){var a=l(e.components);return n.a.createElement(u.Provider,{value:a},e.children)},b={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},d=Object(t.forwardRef)((function(e,a){var r=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=t,p=m["".concat(o,".").concat(d)]||m[d]||b[d]||i;return r?n.a.createElement(p,c({ref:a},u,{components:r})):n.a.createElement(p,c({ref:a},u))}));function p(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var s in a)hasOwnProperty.call(a,s)&&(c[s]=a[s]);c.originalType=e,c.mdxType="string"==typeof e?e:t,o[1]=c;for(var u=2;u<i;u++)o[u]=r[u];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);